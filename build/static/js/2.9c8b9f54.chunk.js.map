{"version":3,"file":"static/js/2.9c8b9f54.chunk.js","mappings":"8KACA,GAAgB,KAAO,4BAA4B,MAAQ,6BAA6B,OAAS,8BAA8B,KAAO,4BAA4B,MAAQ,6BAA6B,QAAU,+BAA+B,MAAQ,6BAA6B,MAAQ,6BAA6B,aAAe,oCAAoC,MAAQ,8B,0DCkHrX,EAxGsB,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAIzBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAGZC,iBAAkBC,EAAAA,GAAW,CAC3BH,MAAOG,EAAAA,KACJH,MAAM,iHACNI,SAAS,sGACZH,SAAUE,EAAAA,KACPE,IAAI,EAAG,kGACPD,SAAS,wGAEdE,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAClCC,QAAQC,IAAIC,KAAKC,UAAUN,EAAQ,KAAM,IACzCC,GAAc,GACdC,IACAK,EAASP,GACTX,GAAU,MAKRkB,EAAQ,yCAAG,WAAOC,GAAP,qGAEUC,EAAAA,EAAAA,KA7Bf,iEA6B+BD,EAAU,CAC/CE,QAAS,CAAEC,cAAe,wBAHf,OAEPC,EAFO,OAKbT,QAAQC,IAAIQ,EAASC,MAErBC,MAAM,wHAPO,gDASbX,QAAQY,MAAM,SAAd,MAEAD,MAAM,8HAXO,yDAAH,sDAed,OACE,gBAEEE,UACE5B,EAAS6B,IAAWC,EAAAA,MAAcA,EAAAA,QAAiBA,EAAAA,MAErDC,QAAS,kBAAM9B,GAAU,IAL3B,UAOE,gBAAK8B,QAAS,SAACC,GAAD,OAAOA,EAAEC,mBAAvB,UAEE,kBACEL,UAAWE,EAAAA,KACXI,OAAO,OACPvB,SAAUT,EAAOiC,aAHnB,WAME,eAAIP,UAAWE,EAAAA,MAAf,iFACA,iBAAKF,UAAWE,EAAAA,QAAhB,WAEE,kBAAOF,UAAWE,EAAAA,MAAcM,QAAQ,WACxC,kBACER,UAAWC,IAAWC,EAAAA,MAAcA,EAAAA,OACpCO,KAAK,QACLC,YAAY,iCACZC,KAAK,QACLC,MAAOtC,EAAOU,OAAOP,MACrBoC,SAAUvC,EAAOwC,aACjBC,OAAQzC,EAAO0C,aAGhB1C,EAAO2C,OAAOxC,OAASH,EAAO4C,QAAQzC,OACrC,gBAAKuB,UAAWE,EAAAA,MAAhB,SAA+B5B,EAAO2C,OAAOxC,QAC3C,MAEJ,kBAAOuB,UAAWE,EAAAA,MAAcM,QAAQ,cACxC,kBACER,UAAWC,IAAWC,EAAAA,MAAcA,EAAAA,UACpCO,KAAK,WACLC,YAAY,uCACZC,KAAK,WACLC,MAAOtC,EAAOU,OAAON,SACrBmC,SAAUvC,EAAOwC,aACjBC,OAAQzC,EAAO0C,aAGhB1C,EAAO2C,OAAOvC,UAAYJ,EAAO4C,QAAQxC,UACxC,gBAAKsB,UAAWE,EAAAA,MAAhB,SAA+B5B,EAAO2C,OAAOvC,WAC3C,MAEJ,gBAAKsB,UAAWE,EAAAA,OAAhB,UACE,mBAAQF,UAAWE,EAAAA,aAAqBS,KAAK,SAA7C,UACE","sources":["webpack://VetClinic/./src/components/authorization/authorization.module.scss?d5d3","components/authorization/Authorization.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"authorization_icon__GwWI0\",\"modal\":\"authorization_modal__SLJiI\",\"active\":\"authorization_active__ty9gE\",\"form\":\"authorization_form__1fKgL\",\"title\":\"authorization_title__cN6uh\",\"wrapper\":\"authorization_wrapper__y6zQ+\",\"input\":\"authorization_input__ucNxf\",\"email\":\"authorization_email__C9tZD\",\"buttonSubmit\":\"authorization_buttonSubmit__gIchs\",\"error\":\"authorization_error__OXhDQ\"};","//*Authorization\r\n\r\n//*Import base\r\nimport styles from './authorization.module.scss';\r\nimport classNames from 'classnames';\r\n\r\n//*Import Libraries\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nconst Authorization = ({ active, setActive }) => {\r\n  const URL = 'https://vetclinic-backend.onrender.com/api/users/authorization';\r\n\r\n  //*Formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    //*Validation\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email('Неправильный email адрес')\r\n        .required('Обязательное поле!'),\r\n      password: Yup.string()\r\n        .min(6, 'Минимум  6 символов')\r\n        .required('Обязательное поле!'),\r\n    }),\r\n    onSubmit: (values, { setSubmitting, resetForm }) => {\r\n      console.log(JSON.stringify(values, null, 2));\r\n      setSubmitting(false);\r\n      resetForm();\r\n      sendData(values);\r\n      setActive(false);\r\n    },\r\n  });\r\n\r\n  //*Sending data form\r\n  const sendData = async (formData) => {\r\n    try {\r\n      const response = await axios.post(URL, formData, {\r\n        headers: { Authorization: 'form authorization' },\r\n      });\r\n      console.log(response.data);\r\n      // Показать сообщение про успешную авторизацию\r\n      alert('Успешная авторизация!');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      // Показать сообщение про неудачную авторизацию\r\n      alert('Неудачная авторизация!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      //*Сonditions for switching styles in mode active\r\n      className={\r\n        active ? classNames(styles.modal, styles.active) : styles.modal\r\n      }\r\n      onClick={() => setActive(false)}\r\n    >\r\n      <div onClick={(e) => e.stopPropagation()}>\r\n        {/* Form */}\r\n        <form\r\n          className={styles.form}\r\n          method='post'\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          {/* Title form */}\r\n          <h2 className={styles.title}>АВТОРИЗАЦИЯ</h2>\r\n          <div className={styles.wrapper}>\r\n            {/* Email */}\r\n            <label className={styles.label} htmlFor='email'></label>\r\n            <input\r\n              className={classNames(styles.input, styles.email)}\r\n              name='email'\r\n              placeholder='Почта'\r\n              type='email'\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {/* Conditions for including a style error */}\r\n            {formik.errors.email && formik.touched.email ? (\r\n              <div className={styles.error}>{formik.errors.email}</div>\r\n            ) : null}\r\n            {/* Password */}\r\n            <label className={styles.label} htmlFor='password'></label>\r\n            <input\r\n              className={classNames(styles.input, styles.password)}\r\n              name='password'\r\n              placeholder='Пароль'\r\n              type='password'\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {/* Conditions for including a style error */}\r\n            {formik.errors.password && formik.touched.password ? (\r\n              <div className={styles.error}>{formik.errors.password}</div>\r\n            ) : null}\r\n            {/* Buttons */}\r\n            <div className={styles.button}>\r\n              <button className={styles.buttonSubmit} type='submit'>\r\n                <span>ВХОД</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authorization;\r\n"],"names":["active","setActive","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","setSubmitting","resetForm","console","log","JSON","stringify","sendData","formData","axios","headers","Authorization","response","data","alert","error","className","classNames","styles","onClick","e","stopPropagation","method","handleSubmit","htmlFor","name","placeholder","type","value","onChange","handleChange","onBlur","handleBlur","errors","touched"],"sourceRoot":""}