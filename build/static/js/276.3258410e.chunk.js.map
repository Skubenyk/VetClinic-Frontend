{"version":3,"file":"static/js/276.3258410e.chunk.js","mappings":"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","sources":["webpack://VetClinic/./src/components/registration/registration.module.scss?97d2","components/registration/Registration.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"registration_icon__mEnMQ\",\"modal\":\"registration_modal__7FKFW\",\"active\":\"registration_active__Ak5yS\",\"form\":\"registration_form__7Va2K\",\"title\":\"registration_title__Ie6+Q\",\"wrapper\":\"registration_wrapper__kCX0D\",\"input\":\"registration_input__kGqp0\",\"firstName\":\"registration_firstName__+sNKC\",\"buttonSubmit\":\"registration_buttonSubmit__kuPpT\",\"error\":\"registration_error__JQBa7\"};","//*Registration\r\n\r\n//*Import base\r\nimport styles from './registration.module.scss';\r\nimport classNames from 'classnames';\r\n\r\n//*Import Libraries\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nconst Registration = ({ active, setActive }) => {\r\n  const URL = 'https://vetclinic-backend.onrender.com/api/users/registration';\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      userName: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: Yup.object({\r\n      firstName: Yup.string()\r\n        .min(2, 'Минимум 2 символа')\r\n        .required('Обязательное поле!'),\r\n      lastName: Yup.string()\r\n        .min(2, 'Минимум 2 символа')\r\n        .required('Обязательное поле!'),\r\n      userName: Yup.string()\r\n        .min(4, 'Минимум 4 символа')\r\n        .required('Обязательное поле!'),\r\n      email: Yup.string()\r\n        .email('Неправильный email адрес')\r\n        .required('Обязательное поле!'),\r\n      password: Yup.string()\r\n        .min(6, 'Минимум 6 символов')\r\n        .required('Обязательное поле!'),\r\n    }),\r\n    onSubmit: (values, { setSubmitting, resetForm }) => {\r\n      console.log(JSON.stringify(values, null, 2));\r\n      setSubmitting(false);\r\n      resetForm();\r\n      sendData(values);\r\n      setActive(false);\r\n    },\r\n  });\r\n\r\n  const sendData = async (formData) => {\r\n    try {\r\n      const response = await axios.post(URL, formData, {\r\n        headers: { Registration: 'form registration' },\r\n      });\r\n      console.log(response.data);\r\n      // Показать сообщение про успешную регистрацию\r\n      alert('Успешная регистрация!');\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      // Показать сообщение про неудачную регистрацию\r\n      alert('Неудачная регистрация!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        active ? classNames(styles.modal, styles.active) : styles.modal\r\n      }\r\n      onClick={() => setActive(false)}\r\n    >\r\n      <div onClick={(e) => e.stopPropagation()}>\r\n        <form\r\n          className={styles.form}\r\n          method='post'\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <h2 className={styles.title}>РЕГИСТРАЦИЯ</h2>\r\n          <div className={styles.wrapper}>\r\n            <label className={styles.label} htmlFor='firstName'></label>\r\n            <input\r\n              className={classNames(styles.input, styles.firstName)}\r\n              name='firstName'\r\n              placeholder='Имя'\r\n              type='text'\r\n              value={formik.values.firstName}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {formik.errors.firstName && formik.touched.firstName ? (\r\n              <div className={styles.error}>{formik.errors.firstName}</div>\r\n            ) : null}\r\n            <label className={styles.label} htmlFor='lastName'></label>\r\n            <input\r\n              className={classNames(styles.input, styles.lastName)}\r\n              name='lastName'\r\n              placeholder='Фамилия'\r\n              type='text'\r\n              value={formik.values.lastName}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {formik.errors.lastName && formik.touched.lastName ? (\r\n              <div className={styles.error}>{formik.errors.lastName}</div>\r\n            ) : null}\r\n            <label className={styles.label} htmlFor='userName'></label>\r\n            <input\r\n              className={classNames(styles.input, styles.userName)}\r\n              name='userName'\r\n              placeholder='Имя пользователя'\r\n              type='text'\r\n              value={formik.values.userName}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {formik.errors.userName && formik.touched.userName ? (\r\n              <div className={styles.error}>{formik.errors.userName}</div>\r\n            ) : null}\r\n            <label className={styles.label} htmlFor='email'></label>\r\n            <input\r\n              className={classNames(styles.input, styles.email)}\r\n              name='email'\r\n              placeholder='Электронная почта'\r\n              type='email'\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {formik.errors.email && formik.touched.email ? (\r\n              <div className={styles.error}>{formik.errors.email}</div>\r\n            ) : null}\r\n            <label className={styles.label} htmlFor='password'></label>\r\n            <input\r\n              className={classNames(styles.input, styles.password)}\r\n              name='password'\r\n              placeholder='Пароль'\r\n              type='password'\r\n              value={formik.values.password}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n            />\r\n            {formik.errors.password && formik.touched.password ? (\r\n              <div className={styles.error}>{formik.errors.password}</div>\r\n            ) : null}\r\n            <div className={styles.button}>\r\n              <button className={styles.buttonSubmit} type='submit'>\r\n                <span>РЕГИСТРАЦИЯ</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"names":["active","setActive","formik","useFormik","initialValues","firstName","lastName","userName","email","password","validationSchema","Yup","min","required","onSubmit","values","setSubmitting","resetForm","console","log","JSON","stringify","sendData","formData","axios","headers","Registration","response","data","alert","error","className","classNames","styles","onClick","e","stopPropagation","method","handleSubmit","htmlFor","name","placeholder","type","value","onChange","handleChange","onBlur","handleBlur","errors","touched"],"sourceRoot":""}